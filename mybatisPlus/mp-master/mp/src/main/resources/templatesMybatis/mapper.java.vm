package ${package.Mapper};

import ${package.Entity}.${entity};
import ${package.Entity}.Criteria;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.annotations.Param;

/**
 * <p>
  * $!{table.comment} Mapper 接口
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
public interface ${table.mapperName} {
	/**
     * 根据条件查询记录总数
     */
    int countByExample(Criteria example);

    /**
     * 根据条件删除记录
     */
    int deleteByExample(Criteria example);

    /**
     * 根据主键删除记录
     */
    #foreach($field in ${table.fields})
	#if(${field.keyFlag})
	#if(${field.propertyType.equals("Integer")})
	int deleteByPrimaryKey(Integer id);
	#end
	#if(${field.propertyType.equals("String")})
	int deleteByPrimaryKey(String id);
	#end
	#end
	#end

    /**
     * 保存记录,不管记录里面的属性是否为空
     */
    int insert(${entity} record);

    /**
     * 保存属性不为空的记录
     */
    int insertSelective(${entity} record);
    /**
     * 根据条件查询记录集
     */
    List<${entity}> selectByExample(Criteria example);

    /**
     * 根据主键查询记录
     */
    #foreach($field in ${table.fields})
	#if(${field.keyFlag})
	#if(${field.propertyType.equals("Integer")})
	${entity} selectByPrimaryKey(Integer id);
	#end
	#if(${field.propertyType.equals("String")})
	${entity} selectByPrimaryKey(String id);
	#end
	#end
	#end
 
    /**
     * 根据条件更新属性不为空的记录
     */
    int updateByExampleSelective(@Param("record") ${entity} record, @Param("condition") Map<String, Object> condition);

    /**
     * 根据条件更新记录
     */
    int updateByExample(@Param("record") ${entity} record, @Param("condition") Map<String, Object> condition);

    /**
     * 根据主键更新属性不为空的记录
     */
    int updateByPrimaryKeySelective(${entity} record);

    /**
     * 根据主键更新记录
     */
    int updateByPrimaryKey(${entity} record);
}
